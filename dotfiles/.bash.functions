# Login to yb-tserver-0
tsbash() {
    if [[ $# -eq 0 ]] ; then
        echo 'tsbash <namespace>'
    else 
        kubectl exec -it yb-tserver-0 -n $1 -- bash
fi
}

# Login to yb-master-0
msbash() {
    if [[ $# -eq 0 ]] ; then
        echo 'msbash <namespace>'
    else 
        kubectl exec -it yb-master-0 -n $1 -- bash
fi
}

# Login to any pod
pbash() {
    if [[ $# -eq 0 ]] ; then
        echo 'pbash <pod> <namespace>'
    else 
        kubectl exec -it $1 -n $2 -- bash
fi
}

tsnbash() {
    if [[ $# -eq 0 ]] ; then
        echo 'tsnbash <tserver-number> <namespace>'
    else 
        kubectl exec -it yb-tserver-$1 -n $2 -- bash
fi
}

msnbash() {
    if [[ $# -eq 0 ]] ; then
        echo 'msnbash <master-number> <namespace>'
    else
        kubectl exec -it yb-master-$1 -n $2 -- bash
fi
}

tscmd() {
    if [[ $# -eq 0 ]] ; then
        echo 'tscmd <namespace> <command>'
    else 
        kubectl exec yb-tserver-0 -n $1 -- $2
fi
}

mscmd() {
    if [[ $# -eq 0 ]] ; then
        echo 'mscmd <namespace> <command>'
    else 
        kubectl exec yb-master-0 -n $1 -- $2
fi
}

tsncmd() {
    if [[ $# -eq 0 ]] ; then
        echo 'tsncmd <tserver-number> <namespace> <command>'
    else 
   kubectl exec yb-tserver-$1 -n $2 -- $3
fi
}

msncmd() {
    if [[ $# -eq 0 ]] ; then
        echo 'msncmd <master-number> <namespace> <command>'
    else 
        kubectl exec yb-master-$1 -n $2 -- $3
fi
}

ywbash() {
   kubectl exec -c yugaware -it yb-platform-yugaware-0 -n yb-platform -- bash

}

function cptk(){
    if [[ $# -eq 0 ]] ; then
        echo 'cptk /path/to/file <namespace> <pod> <destination-path>'
    else 
        kubectl cp $1 $2/$3:$4
fi
}

function cpfk(){
    if [[ $# -eq 0 ]] ; then
        echo 'cpfk <namespace> <pod> </file/in/pod> <destination-path>'
    else 
        kubectl cp $1/$2:$3 $4
fi
}

# tsh function

tshscp() {
    if [[ $# -eq 0 ]] ; then
        echo 'tshscp <path/to/file> <ticket-number'
    else 
        tsh scp $1 support@lincoln:cases/$2/
fi
}

spin_until_completed() {
    if [[ $# -eq 0 ]] ; then
        echo 'spin_until_completed <process-id>'
    else
        spin[0]="-"
        spin[1]="\\"
        spin[2]="|"
        spin[3]="/"
        echo -n "[Running] ${spin[0]}" && while kill -0 $1 2> /dev/null
        do
            for i in "${spin[@]}"
            do
                echo -ne "\b$i"
                sleep 0.2
            done
        done
fi
}

gpush_notes() {
    if [[ $# -eq 0 ]] ; then
        echo 'No commit message provided'
    else
        # get input from user
        echo "Have you updated the TOC? (y/n): \c"
        read response
        if [[ $response == 'y' ]] ; then
            cd /Users/pgyogesh/Library/Mobile\ Documents/iCloud~md~obsidian/Documents/my_notes/
            echo "Adding files to git"
            git add . --quite
            echo "Committing changes"
            git commit -m "$1" --quite
            echo "Pushing changes to Gitlab"
            git push --quiet
        else
            echo 'No changes made'
        fi
fi
}