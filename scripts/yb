#!/bin/bash

#set -ex

# Colorful echo
echo_orange() {
  echo -n -e "\033[38;5;214m$1\033[0m"
}

echo_green() {
  echo -n -e "\033[38;5;2m$1\033[0m"
}

echo_blue() {
  echo -n -e "\033[38;5;4m$1\033[0m"
}

echo_red() {
  echo -n -e "\033[38;5;1m$1\033[0m"
}

YUGADATA_PATH=${YUGADATA_PATH:-$HOME/yugadata}
YUGABYTED_PATH=$(which yugabyted)

if [ -z "$YUGABYTED_PATH" ]; then
  echo_red "yugabyted command not found. Please ensure it's installed and in your PATH. \n"
  exit 1
fi

# the createLoopBack function
createLoopBack() {
  for i in {2..4}; 
    do 
      # check if loopback interface does not exist
      if ! ifconfig lo0 | grep -q "127.0.0.$i"; then
        sudo ifconfig lo0 alias  127.0.0.$i up; 
        echo_orange "Created loopback interface 127.0.0.$i \n"
      fi
    done
}

# the print_flags function
print_flags() {
  printf "\e[1;33m%-10s\e[0m \e[1;34m%-30s\e[0m \e[1;35m%s\e[0m\n" "Type" "GFlag" "Value" 
  for type in Master Tserver; do
    type_upper=$(echo $type | tr '[:lower:]' '[:upper:]')
    eval "flags=\$YB_${type_upper}_FLAGS"
    echo "$flags" | tr ',' '\n' | awk -v type="$type" -F'=' '{printf("%-10s %-30s ", type, $1); for(i=2; i<=NF; i++) printf("%s%s", (i>2 ? "=" : ""), $i); printf("\n")}'
  done | column -t -s $'\t'
}

debug_info() {
  if [[ ! -z $ADDITIONAL_ARGS ]]; then
    echo_blue "Additional args: $ADDITIONAL_ARGS \n"
  fi
  print_flags
}

# the is_running function
is_running() {
  pg_isready -h 127.0.0.2 -p 5433 2> /dev/null > /dev/null
}

# the create function
create() {
  debug_info
  createLoopBack
  echo_orange "🚀 Creating YugabyteDB cluster \n"
  mkdir -p $YUGADATA_PATH/node-2 $YUGADATA_PATH/node-3 $YUGADATA_PATH/node-4

  # Start first instance
  echo_green "🚀 Starting instance 1:- host: 127.0.0.2 base_dir: $YUGADATA_PATH/node-2"
  yugabyted start \
    --base_dir=$YUGADATA_PATH/node-2 \
    --advertise_address=127.0.0.2 --tserver_flags="$YB_TSERVER_FLAGS" --master_flags="$YB_MASTER_FLAGS" > /dev/null
  if [ $? -eq 0 ]; then
    echo_green "... ✅ \n"
  else
    echo_red ".. ❌ \n"
  fi

  # Join other instances
  for i in {3..4}; do
    echo_green "🚀 Starting and joining instance $i:- host: 127.0.0.$i base_dir: $YUGADATA_PATH/node-$i"
    yugabyted start \
      --base_dir=$YUGADATA_PATH/node-$i \
      --join=127.0.0.2 \
      --advertise_address=127.0.0.$i --tserver_flags="$YB_TSERVER_FLAGS" --master_flags="$YB_MASTER_FLAGS" --ui false > /dev/null
    if [ $? -eq 0 ]; then
      echo_green "... ✅ \n"
    else
      echo_red "... ❌ \n"
    fi
  done

  # Get the status
  yugabyted status --base_dir=$YUGADATA_PATH/node-2
}

# the start function
start() {
  debug_info
  createLoopBack
  echo_orange "🚀 Starting YugabyteDB \n"
  for i in {2..4}; do
    echo_green "🚀 Starting instance $i:- host: 127.0.0.$i base_dir: $YUGADATA_PATH/node-$i"
    yugabyted start \
      --base_dir $YUGADATA_PATH/node-$i \
      --background=true --tserver_flags="$YB_TSERVER_FLAGS" --master_flags="$YB_MASTER_FLAGS" > /dev/null
    if [ $? -eq 0 ]; then
      echo_green "... ✅ \n"
    else
      echo_red "... ❌ \n"
    fi
  done
  # Get the status
  yugabyted status --base_dir=$YUGADATA_PATH/node-2
}

# the Stop function
stop() {
  echo_red "🛑 Stopping YugabyteDB \n"
  tput setaf 1
  for i in {2..4}; do
    yugabyted stop \
    --base_dir $YUGADATA_PATH/node-$i > /dev/null
    if [ $? -eq 0 ]; then
      echo_green "🛑 Stopped instance $i ✅ \n"
    else
      echo_red "🛑 Failed to stop instance $i ❌ \n"
    fi
  done
  tput sgr0
}

# the destroy function
destroy() {
  echo_red "💥 Destroying YugabyteDB \n"
  for i in {2..4}; do
    # Set terminal text to red
    tput setaf 1
    yugabyted destroy --base_dir $YUGADATA_PATH/node-$i > /dev/null
    if [ $? -eq 0 ]; then
      echo_red "💥 Destroyed instance $i ✅ \n"
    else
      echo_red "💥 Failed to destroy instance $i ❌ \n"
    fi
    # Set terminal text to default
    tput sgr0
  done
  rm -rf $YUGADATA_PATH
}

# the verify_start function
verify_start() {
  for i in {1..5}; do
    if is_running ; then
      echo_green "🚀 YugabyteDB is accepting connections \n"
      exit 0
    else
      echo_orange "🚀 Waiting for YugabyteDB to accept connections \n"
      sleep 2
    fi
  done
  echo_red "🛑 YugabyteDB is not accepting connections \n"
}

# the restart function
restart() {
  stop
  start
}


case "$1" in
  create)
    if is_running; then
      echo_orange "🚀 YugabyteDB is already running. Please destroy it first or use recreate option. \n"
      exit 1
    fi
    create
    verify_start
    ;;
  start)
    if is_running; then
      echo_orange "🚀 YugabyteDB is already running. Please stop it first or use restart option. \n"
      exit 1
    fi
    start
    verify_start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    verify_start
    ;;
  status)
    if is_running; then
      echo_green "🚀 YugabyteDB is running. \n"
      exit 0
    else
      echo_orange "🛑 YugabyteDB is not running. \n"
      exit 1
    fi
    ;;
  destroy)
    destroy
    ;;
  recreate)
    destroy
    create
    verify_start
    ;;
  *)
    echo_orange "Usage: $0 create|start|stop|restart|status|destroy"
    exit 1
    ;;
esac
