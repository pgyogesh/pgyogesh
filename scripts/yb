#!/bin/bash

# Check if --verbose flag is passed at the end of the command

if [ "${@: -1}" == "--verbose" ]; then
  set -ex
fi

# Colorful echo
echo_orange() {
  echo -n -e "\033[38;5;214m$1\033[0m"
}

echo_green() {
  echo -n -e "\033[38;5;2m$1\033[0m"
}

echo_blue() {
  echo -n -e "\033[38;5;4m$1\033[0m"
}

echo_red() {
  echo -n -e "\033[38;5;1m$1\033[0m"
}

YUGADATA_PATH=${YUGADATA_PATH:-$HOME/yugadata}
YUGABYTED_PATH=$(which yugabyted)
YB_TSERVER_FLAGS="flagfile=$YUGADATA_PATH/tserver.conf"
YB_MASTER_FLAGS="flagfile=$YUGADATA_PATH/master.conf"

if [ -z "$YUGABYTED_PATH" ]; then
  echo_red "yugabyted command not found. Please ensure it's installed and in your PATH. \n"
  exit 1
fi

# the createLoopBack function
createLoopBack() {
  for i in {2..4}; 
    do 
      # check if loopback interface does not exist
      if ! ifconfig lo0 | grep -q "127.0.0.$i"; then
        sudo ifconfig lo0 alias  127.0.0.$i up; 
        echo_orange "Created loopback interface 127.0.0.$i \n"
      fi
    done
}

# the print_flags function
print_flags() {
  printf "\e[1;33m%-10s\e[0m \e[1;34m%-30s\e[0m \e[1;35m%s\e[0m\n" "Type" "GFlag" "Value" 
  for type in Master Tserver; do
    type_upper=$(echo $type | tr '[:lower:]' '[:upper:]')
    eval "flags=\$YB_${type_upper}_FLAGS"
    echo "$flags" | tr ',' '\n' | awk -v type="$type" -F'=' '{printf("%-10s %-30s ", type, $1); for(i=2; i<=NF; i++) printf("%s%s", (i>2 ? "=" : ""), $i); printf("\n")}'
  done | column -t -s $'\t'
}

# pring $ADDITONAL_ARGS
if [ -n "$ADDITIONAL_ARGS" ]; then
  echo_orange "Additional arguments: $ADDITIONAL_ARGS \n"
fi

# the is_running function
is_running() {
  pg_isready -h 127.0.0.2 -p 5433 2> /dev/null > /dev/null
}

# the create function
create() {
  print_flags
  createLoopBack
  echo_orange "üöÄ Creating YugabyteDB cluster \n"
  mkdir -p $YUGADATA_PATH/node-2 $YUGADATA_PATH/node-3 $YUGADATA_PATH/node-4

  # Start first instance
  echo_green "üöÄ Starting instance 1:- host: 127.0.0.2 base_dir: $YUGADATA_PATH/node-2"
  yugabyted start \
    --base_dir=$YUGADATA_PATH/node-2 \
    --advertise_address=127.0.0.2 --tserver_flags="$YB_TSERVER_FLAGS" --master_flags="$YB_MASTER_FLAGS" --cloud_location=aws.ap-south-1.ap-south-1a $ADDITIONAL_ARGS > /dev/null 
  if [ $? -eq 0 ]; then
    echo_green "... ‚úÖ \n"
  else
    echo_red ".. ‚ùå \n"
  fi

  # Join other instances
  for i in {3..4}; do
    if [ $i -eq 3 ]; then
      cloud_location=aws.ap-south-2.ap-south-2a
    else
      cloud_location=aws.ap-southeast-1.ap-southeast-1a
    fi
    echo_green "üöÄ Starting and joining instance $i:- host: 127.0.0.$i base_dir: $YUGADATA_PATH/node-$i"
    sleep 2
    yugabyted start \
      --base_dir=$YUGADATA_PATH/node-$i \
      --join=127.0.0.2 \
      --advertise_address=127.0.0.$i --tserver_flags="$YB_TSERVER_FLAGS" --master_flags="$YB_MASTER_FLAGS" --cloud_location=$cloud_location --ui false $ADDITIONAL_ARGS> /dev/null
    if [ $? -eq 0 ]; then
      echo_green "... ‚úÖ \n"
    else
      echo_red "... ‚ùå \n"
    fi
  done

  # Get the status
  yugabyted status --base_dir=$YUGADATA_PATH/node-2
}

# the start function
start() {
  print_flags
  createLoopBack
  echo_orange "üöÄ Starting YugabyteDB \n"
  for i in {2..4}; do
    echo_green "üöÄ Starting instance $i:- host: 127.0.0.$i base_dir: $YUGADATA_PATH/node-$i"
    sleep 2
    yugabyted start \
      --base_dir $YUGADATA_PATH/node-$i \
      --background=true --tserver_flags="$YB_TSERVER_FLAGS" --master_flags="$YB_MASTER_FLAGS" --cloud_location=aws.ap-south-1.ap-south-1a $ADDITIONAL_ARGS > /dev/null
    if [ $? -eq 0 ]; then
      echo_green "... ‚úÖ \n"
    else
      echo_red "... ‚ùå \n"
    fi
  done
  # Get the status
  yugabyted status --base_dir=$YUGADATA_PATH/node-2
}

# the Stop function
stop() {
  echo_red "üõë Stopping YugabyteDB \n"
  tput setaf 1
  for i in {2..4}; do
    yugabyted stop \
    --base_dir $YUGADATA_PATH/node-$i > /dev/null
    if [ $? -eq 0 ]; then
      echo_green "üõë Stopped instance $i ‚úÖ \n"
    else
      echo_red "üõë Failed to stop instance $i ‚ùå \n"
    fi
  done
  tput sgr0
}

# the destroy function
destroy() {
  echo_red "üí• Destroying YugabyteDB \n"
  for i in {2..4}; do
    # Set terminal text to red
    tput setaf 1
    yugabyted destroy --base_dir $YUGADATA_PATH/node-$i > /dev/null
    if [ $? -eq 0 ]; then
      echo_red "üí• Destroyed instance $i ‚úÖ \n"
    else
      echo_red "üí• Failed to destroy instance $i ‚ùå \n"
    fi
    # Set terminal text to default
    tput sgr0
  done
}

# the verify_start function
verify_start() {
  for i in {1..5}; do
    if is_running ; then
      echo_green "üöÄ YugabyteDB is accepting connections \n"
      exit 0
    else
      echo_orange "üöÄ Waiting for YugabyteDB to accept connections \n"
      sleep 2
    fi
  done
  echo_red "üõë YugabyteDB is not accepting connections \n"
}

# the restart function
restart() {
  stop
  start
}

display_help() {
    # Define some colors for output
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    YELLOW='\033[1;33m'
    BLUE='\033[0;34m'
    NC='\033[0m' # No Color

    # Print the usage message
    echo -e "${YELLOW}Usage: $0 {create|start|stop|restart|status|destroy|recreate|help}${NC}"
    echo -e "${BLUE}===========${NC}"
    echo -e "${GREEN}Commands:${NC}"
    echo -e "  ${RED}create${NC}   - Creates a new instance of YugabyteDB."
    echo -e "  ${RED}start${NC}    - Starts the YugabyteDB instance."
    echo -e "  ${RED}stop${NC}     - Stops the YugabyteDB instance."
    echo -e "  ${RED}restart${NC}  - Restarts the YugabyteDB instance."
    echo -e "  ${RED}status${NC}   - Checks if the YugabyteDB instance is running."
    echo -e "  ${RED}destroy${NC}  - Destroys the YugabyteDB instance."
    echo -e "  ${RED}recreate${NC} - Destroys and recreates the YugabyteDB instance."
    echo -e "  ${RED}help${NC}     - Prints this help message."
    echo -e "${BLUE}===========${NC}"
    echo -e "${GREEN}Environment variables:${NC}"
    echo -e "  ${YELLOW}YB_MASTER_FLAGS${NC} - Comma separated list of master flags."
    echo -e "      Example: export YB_MASTER_FLAGS='ysql_num_shards_per_tserver=8,yb_num_shards_per_tserver=8'"
    echo -e "  ${YELLOW}YB_TSERVER_FLAGS${NC} - Comma separated list of tserver flags."
    echo -e "      Example: export YB_TSERVER_FLAGS='ysql_pg_conf_csv={statement_timeout=60000},ysql_num_shards_per_tserver=8,yb_num_shards_per_tserver=8'"
    echo -e "  ${YELLOW}ADDITIONAL_ARGS${NC} - Additional arguments to pass to yugabyted command."
    echo -e "      Example: export ADDITIONAL_ARGS='--secure --certs_dir=<path_to_certs_dir>'"
}

case "$1" in
  create)
    if is_running; then
      echo_orange "üöÄ YugabyteDB is already running. Please destroy it first or use recreate option. \n"
      exit 1
    fi
    create
    verify_start
    ;;
  start)
    # if is_running; then
      echo_orange "üöÄ YugabyteDB is already running. Please stop it first or use restart option. \n"
      # exit 1
    # fi
    start
    verify_start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    verify_start
    ;;
  status)
    if is_running; then
      echo_green "üöÄ YugabyteDB is running. \n"
      exit 0
    else
      echo_orange "üõë YugabyteDB is not running. \n"
      exit 1
    fi
    ;;
  destroy)
    destroy
    ;;
  recreate)
    destroy
    create
    verify_start
    ;;
  *)
    display_help
    ;;
esac
